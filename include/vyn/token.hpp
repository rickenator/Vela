#ifndef VYN_TOKEN_HPP
#define VYN_TOKEN_HPP

#include <string>

enum class TokenType {
    KEYWORD_FN, KEYWORD_IF, KEYWORD_ELSE, KEYWORD_VAR, KEYWORD_CONST,
    KEYWORD_TEMPLATE, KEYWORD_CLASS, KEYWORD_RETURN, KEYWORD_FOR, KEYWORD_IN,
    KEYWORD_SCOPED, KEYWORD_IMPORT, KEYWORD_SMUGGLE, KEYWORD_TRY, KEYWORD_CATCH,
    KEYWORD_FINALLY, KEYWORD_DEFER, KEYWORD_ASYNC, KEYWORD_AWAIT, KEYWORD_MATCH,
    IDENTIFIER, INT_LITERAL, STRING_LITERAL, LBRACE, RBRACE, LPAREN, RPAREN,
    LBRACKET, RBRACKET, SEMICOLON, COLON, COLONCOLON, COMMA, EQ, EQEQ, LT, GT,
    PLUS, MINUS, DIVIDE, DOT, ARROW, AMPERSAND, BANG, AND, FAT_ARROW, DOTDOT,
    AT, COMMENT, INDENT, DEDENT, EOF_TOKEN
};

struct Token {
    TokenType type;
    std::string value;
    int line;
    int column;
};

std::string token_type_to_string(TokenType type);

#endif // VYN_TOKEN_HPP